blueprint:
  name: Sunrise Light Simulator
  description: Gradually brighten lights and change color to simulate a sunrise over a specified duration. Specify by Light entity, Area, or Label.
  domain: automation
  input:
    target_lights:
      name: Lights
      description: Select lights by entity, area, device, or label for the sunrise simulation
      selector:
        target: {}
    start_time:
      name: Start Time
      description: Time to start the sunrise simulation
      selector:
        time: {}
    duration:
      name: Duration (minutes)
      description: How long the sunrise should last
      default: 45
      selector:
        number:
          min: 10
          max: 120
          step: 5
          unit_of_measurement: minutes
    max_brightness:
      name: Maximum Brightness
      description: The maximum brightness level to reach at the end of the sunrise
      default: 100
      selector:
        number:
          min: 1
          max: 100
          step: 1
          unit_of_measurement: "%"
    pre_sunrise_actions:
      name: Pre-Sunrise Actions (Optional)
      description: Actions to run before the sunrise simulation starts
      default: []
      selector:
        action: {}
    post_sunrise_actions:
      name: Post-Sunrise Actions (Optional)
      description: Actions to run after the sunrise simulation completes
      default: []
      selector:
        action: {}

trigger:
  - platform: time
    at: !input start_time

condition: []

action:
  - choose: []
    default: !input pre_sunrise_actions
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: 1
      kelvin: 2000
  - delay:
      seconds: 5
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: "{{ (max_brightness * 0.10) | int }}"
      kelvin: 2200
      transition: "{{ (duration * 60 * 0.185) | int }}"
  - delay:
      seconds: "{{ (duration * 60 * 0.185) | int }}"
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: "{{ (max_brightness * 0.29) | int }}"
      kelvin: 2700
      transition: "{{ (duration * 60 * 0.222) | int }}"
  - delay:
      seconds: "{{ (duration * 60 * 0.222) | int }}"
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: "{{ (max_brightness * 0.59) | int }}"
      kelvin: 3500
      transition: "{{ (duration * 60 * 0.222) | int }}"
  - delay:
      seconds: "{{ (duration * 60 * 0.222) | int }}"
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: "{{ (max_brightness * 0.86) | int }}"
      kelvin: 4500
      transition: "{{ (duration * 60 * 0.222) | int }}"
  - delay:
      seconds: "{{ (duration * 60 * 0.222) | int }}"
  - service: light.turn_on
    target: !input target_lights
    data:
      brightness_pct: "{{ max_brightness }}"
      kelvin: 5500
      transition: "{{ (duration * 60 * 0.222) | int }}"
  - choose: []
    default: !input post_sunrise_actions

mode: single

variables:
  duration: !input duration
  max_brightness: !input max_brightness